------------------Keyword---------------------------
arr = [3,2,5,6,3,25,8]

1. arr.sort() - to sort the arr in ascending order
2. arr.sort(reverse=True) - to sort arr in reverse order
3. min(arr) - to find min value of arr
4. max(arr) - to find max value of arr

-------------------Smallest/Largest value----------------------------

1. min_value = float('-inf') - to smallest possible value
2. max_value = float('inf') - to largest possible value

------------------- List/Set Conversion----------------------------

a = [2,3,45,6,2,3]  
b = [3,5,4,3,6,7,8,5]
c = {3,5,4,8}
d = {4,3,6,7,8}

1. a_set = set(a) - list to set
2. c_list = list(c) - set to list
3. cd_set_merge = c.union(d) - merge two set / Union of two set
4. ab_list_merge = a + b - to merge two list
5. a.extend(b) - to merge list in existed list

-------------- dict operation ---------------

# Create
    d = {'name': 'Navin', 'age': 25}

# Access
    d['name']       # 'Navin'
    d.get('age')    # 25

# Add/Update
    d['city'] = 'Patna'
    d['age'] = 26

# Delete
    d.pop('age')    # Returns and removes 'age'
    d.clear()       # Removes all items

# Loop
    for k in d: 
        print(k, d[k])

    for k, v in d.items(): 
        print(k, v)

# Check existence
    'name' in d             # True (key)
    'Navin' in d.values()   # True (value)

# Common Methods
    d.keys()            # dict_keys(['name'])
    d.values()          # dict_values(['Navin'])
    d.items()           # dict_items([('name', 'Navin')])
    d.update({'a': 1, 'b': 2})      # Merge or update

# Extra
    len(d)          # Number of items
    d2 = d.copy()   # Shallow copy

# Dict Comprehension
    squares = {x: x*x for x in range(5)}  # {0:0, 1:1, ..., 4:16}

------------- set operation -----------------------

| Operation                | Syntax                     | Example Output                      |
|--------------------------|-----------------------------|--------------------------------------|
| Add element              | `s.add(4)`                  | `{1, 2, 3, 4}`                       |
| Remove element           | `s.remove(2)`               | `{1, 3}` (error if not found)       |
| Discard element          | `s.discard(5)`              | No error if 5 not found             |
| Pop random element       | `s.pop()`                   | Removes and returns random item     |
| Clear all elements       | `s.clear()`                 | `set()`                             |
| Length of set            | `len(s)`                    | `3`                                 |

| Operation               | Code                      | Result             |
|------------------------|----------------------------|--------------------|
| Union                  | `a | b` or `a.union(b)`    | `{1, 2, 3, 4, 5}`   |
| Intersection           | `a & b` or `a.intersection(b)` | `{3}`         |
| Difference (a - b)     | `a - b` or `a.difference(b)`   | `{1, 2}`     |
| Symmetric Difference   | `a ^ b` or `a.symmetric_difference(b)` | `{1, 2, 4, 5}` |
| Subset Check           | `a <= b` or `a.issubset(b)`   | `False`          |
| Superset Check         | `a >= b` or `a.issuperset(b)` | `False`          |
| Disjoint Check         | `a.isdisjoint(b)`             | `False`          |

---------------------



