--------------- List-------------------
1. A list is an ordered, mutable, and indexable collection of elements.
2. Declared using [] or list() constructor.
3. Allows duplicate values.
4. Supports various data types (e.g., integers, strings, floats, etc.).
5. Example:
    my_list = [1, 2, 3, 4, 5]
    empty_list = []  # or list()
7. Accessing elements: list[index] (zero-based indexing).
8. Adding elements:
    Append: list.append(element) (adds at the end).
    Insert: list.insert(index, element) (adds at a specific index).
    Extend: list.extend(another_list) (adds multiple elements).
9. Removing elements:
    list.remove(element) (removes the first occurrence).
    list.pop(index) (removes and returns the element at the given index).
    del list[index] (deletes element at a specific index).
10. Operations:
    Concatenation: list1 + list2
    Repetition: list * n
    Slicing: list[start:end:step]
    Sorting: list.sort(), sorted(list)
    Reversing: list.reverse()
11. Useful for: Storing sequences, iterating, and modifying collections dynamically.

---------------Infinite value ----------------
1. Largest Possible Value: Represented by float('inf'), which means infinity.
    largest_float = float('inf')
2. Smallest Possible Value: Represented by float('-inf'), which means negative infinity.
    smallest_float = float('-inf')

--------------------- Intersection ---------------
1. list convert into set
suppose b,c is set the apply intersection 
    b.intersection(c)

--------------------- Random Number choice ------------
package - #import random
suppose a is list apply the random choice method
    random.choice(a)
--------------------- about set -----------------------

1. A set is an unordered, mutable, and unindexed collection of unique elements.
2. Declared using {} or set() constructor.
3. Duplicate values are not allowed.
4. Supports mathematical set operations like union, intersection, and difference.
5. Example:
    my_set = {1, 2, 3, 4, 5}
    empty_set = set()  # Correct way to create an empty set
6. Adding elements: set.add(element)
7. Removing elements: set.remove(element), set.discard(element), set.pop()
8. Operations:
    Union: set1 | set2 or set1.union(set2)
    Intersection: set1 & set2 or set1.intersection(set2)
    Difference: set1 - set2 or set1.difference(set2)

Useful for: Removing duplicates, membership testing, and mathematical operations

--------------------





